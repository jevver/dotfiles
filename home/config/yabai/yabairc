#!/usr/bin/env dash

updateWindowManagerSpacing() {
  output=$(system_profiler SPDisplaysDataType | grep "Looks like" | awk '{print int($6/60)}' | awk '{$1=$1};1' | head -n 1)
  if [ -z "$output" ]; then
    output=$(system_profiler SPDisplaysDataType | grep Resolution | awk '{print int($4/120)}' | awk '{$1=$1};1' | head -n 1)
  fi
  echo "$output"
}

export WM_SPACING="$(updateWindowManagerSpacing)"

sudo yabai --load-sa

# Global settings
yabai -m config \
  layout bsp \
  window_origin_display focused \
  window_gap "$WM_SPACING" \
  bottom_padding "$WM_SPACING" \
  left_padding "$WM_SPACING" \
  right_padding "$WM_SPACING" \
  top_padding "$WM_SPACING" \
  normal_window_opacity 0.8 \
  window_opacity 0.8 \
  window_opacity on \
  window_opacity_duration 0.1 \
  window_animation_duration 0.1

# Rules
yabai -m rule \
  --add manage=off app="kitty" title='chatgpt' grid='8:8:5:0:3:4' \
  --add manage=off app='1Password' \
  --add manage=off app='Activity Monitor' \
  --add manage=off app='Archive Utility' \
  --add manage=off app='Bartender.' \
  --add manage=off app='FaceTime' \
  --add manage=off app='IINA' \
  --add manage=off app='Installer' \
  --add manage=off app='Messages' \
  --add manage=off app='SoundID' \
  --add manage=off app='System Information' \
  --add manage=off app='System Settings' \
  --add manage=off app='iStat'

# Signals
events="
  display_added
  display_removed
  display_resized
  mission_control_exit
  space_changed
  space_created
  space_destroyed
"

for event in $events; do
  yabai -m signal --add event="$event" action='echo "refresh" | nc -U /tmp/yabai-indicator.socket'
done

yabai -m signal \
  --add event=dock_did_restart action="sudo yabai --load-sa" \
  --add event=window_created action='yabai -m query --windows --window $YABAI_WINDOW_ID | jq -er ".\"can-resize\" or .\"is-floating\"" || yabai -m window $YABAI_WINDOW_ID --toggle float' \
  --add event=window_focused action="yabai -m window $YABAI_WINDOW_ID --opacity 1.0; yabai -m window recent --opacity 0.8"
