return {
  "jackmort/chatgpt.nvim",
  keys = function()
    return {
      {
        "<space>ac",
        ":ChatGPT<CR>",
        desc = "ChatGPT",
        silent = true,
      },
      {
        "<space>ae",
        ":ChatGPTEditWithInstruction<CR>",
        desc = "Edit with instruction",
        mode = { "n", "v" },
        silent = true,
      },
      {
        "<space>ag",
        ":ChatGPTRun grammar_correction<CR>",
        desc = "Grammar Correction",
        mode = { "n", "v" },
        silent = true,
      },
      {
        "<space>at",
        ":ChatGPTRun translate<CR>",
        desc = "Translate",
        mode = { "n", "v" },
        silent = true,
      },
      {
        "<space>ak",
        ":ChatGPTRun keywords<CR>",
        desc = "Keywords",
        mode = { "n", "v" },
        silent = true,
      },
      {
        "<space>ad",
        ":ChatGPTRun docstring<CR>",
        desc = "Docstring",
        mode = { "n", "v" },
        silent = true,
      },
      {
        "<space>aa",
        ":ChatGPTRun add_tests<CR>",
        desc = "Add Tests",
        mode = { "n", "v" },
        silent = true,
      },
      {
        "<space>ao",
        ":ChatGPTRun optimize_code<CR>",
        desc = "Optimize Code",
        mode = { "n", "v" },
        silent = true,
      },
      {
        "<space>as",
        ":ChatGPTRun summarize<CR>",
        desc = "Summarize",
        mode = { "n", "v" },
        silent = true,
      },
      {
        "<space>af",
        ":ChatGPTRun fix_bugs<CR>",
        desc = "Fix Bugs",
        mode = { "n", "v" },
        silent = true,
      },
      {
        "<space>ax",
        ":ChatGPTRun explain_code<CR>",
        desc = "Explain Code",
        mode = { "n", "v" },
        silent = true,
      },
      {
        "<space>ar",
        ":ChatGPTRun roxygen_edit<CR>",
        desc = "Roxygen Edit",
        mode = { "n", "v" },
        silent = true,
      },
      {
        "<space>al",
        ":ChatGPTRun code_readability_analysis<CR>",
        desc = "Code Readability Analysis",
        mode = { "n", "v" },
        silent = true,
      },
    }
  end,
  opts = {},
  dependencies = {
    "muniftanjim/nui.nvim",
    "nvim-lua/plenary.nvim",
    "nvim-telescope/telescope.nvim",
  },
}
